@startuml
title System Monitor Window Class Diagram
package eros {
    class Diagnostic 
    struct Definition
    Diagnostic +-- Definition
    class ArmDisarm
    class heartbeat <<M,#FFFF00>>
    class resource <<M,#FFFF00>>
    class loadfactor <<M,#FFFF00>>
}
package eros_nodes::SystemMonitor {
    interface IWindow #Orange {
        +{abstract} std::string get_name()
        +{abstract} bool update(double dt, double t_ros_time)
        +{abstract} bool new_msg(eros::ArmDisarm::State armed_state)
        +{abstract} bool new_msg(eros::heartbeat heartbeat_msg)
        +{abstract} bool new_msg(eros::resource resource_msg)
        +{abstract} bool new_msg(eros::loadfactor loadfactor_msg)
    }
    abstract BaseWindow #Orange {
        +std::string get_name()
        +{abstract} bool update_window()

    }
    IWindow <|.. BaseWindow
    class DeviceWindow #LimeGreen {
        +bool update(double dt, double t_ros_time)
        +bool new_msg(eros::ArmDisarm::State armed_state) // NO-OP
        +bool new_msg(eros::heartbeat heartbeat_msg) // NO-OP
        +bool new_msg(eros::resource resource_msg)
        +bool new_msg(eros::loadfactor loadfactor_msg)
        -bool update_window()

    }
    BaseWindow <|-- DeviceWindow
    class HeaderWindow #Orange {
        +bool update(double dt, double t_ros_time)
        +bool new_msg(eros::ArmDisarm::State armed_state)
        +bool new_msg(eros::heartbeat heartbeat_msg) // NO-OP
        +bool new_msg(eros::resource resource_msg) // NO-OP
        +bool new_msg(eros::loadfactor loadfactor_msg) // NO-OP
        -bool update_window()

    }
    BaseWindow <|-- HeaderWindow
    class NodeWindow #LimeGreen {
        +bool update(double dt, double t_ros_time)
        +bool new_msg(eros::ArmDisarm::State armed_state) // NO-OP
        +bool new_msg(eros::heartbeat heartbeat_msg)
        +bool new_msg(eros::resource resource_msg)
        +bool new_msg(eros::loadfactor loadfactor_msg) // NO-OP
        -bool update_window()
        
    }
    BaseWindow <|-- NodeWindow
    class InstructionWindow #Orange {
        +bool update(double dt, double t_ros_time)
        +bool new_msg(eros::ArmDisarm::State armed_state) // NO-OP
        +bool new_msg(eros::heartbeat heartbeat_msg)
        +bool new_msg(eros::resource resource_msg)
        +bool new_msg(eros::loadfactor loadfactor_msg) // NO-OP
        -bool update_window()
        
    }
    BaseWindow <|-- InstructionWindow
    class DiagnosticsWindow #Orange {
        +bool update(double dt, double t_ros_time)
        +bool new_msg(eros::ArmDisarm::State armed_state) // NO-OP
        +bool new_msg(eros::heartbeat heartbeat_msg)
        +bool new_msg(eros::resource resource_msg)
        +bool new_msg(eros::loadfactor loadfactor_msg) // NO-OP
        -bool update_window()
        
    }
    BaseWindow <|-- DiagnosticsWindow
    class StatusWindow #Orange {
        +bool update(double dt, double t_ros_time)
        +bool new_msg(eros::ArmDisarm::State armed_state) // NO-OP
        +bool new_msg(eros::heartbeat heartbeat_msg)
        +bool new_msg(eros::resource resource_msg)
        +bool new_msg(eros::loadfactor loadfactor_msg) // NO-OP
        -bool update_window()
        
    }
    BaseWindow <|-- StatusWindow
}
@enduml