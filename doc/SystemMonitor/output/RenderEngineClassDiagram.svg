<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="576px" preserveAspectRatio="none" style="width:808px;height:576px;background:#FFFFFF;" version="1.1" viewBox="0 0 808 576" width="808px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="26.2969" id="_title" style="stroke:none;stroke-width:1.0;" width="125" x="334.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="115" x="339.5" y="22.9951">Render Engine</text><!--MD5=[b56014b26b42410e79399092d3a428ae]
class RenderWindow--><g id="elem_RenderWindow"><rect codeLine="2" fill="#F1F1F1" height="162.0781" id="RenderWindow" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="794" x="7" y="407.2969"/><ellipse cx="347.25" cy="423.2969" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M350.2188,428.9375 Q349.6406,429.2344 349,429.375 Q348.3594,429.5313 347.6563,429.5313 Q345.1563,429.5313 343.8281,427.8906 Q342.5156,426.2344 342.5156,423.1094 Q342.5156,419.9844 343.8281,418.3281 Q345.1563,416.6719 347.6563,416.6719 Q348.3594,416.6719 349,416.8281 Q349.6563,416.9844 350.2188,417.2813 L350.2188,420 Q349.5938,419.4219 349,419.1563 Q348.4063,418.875 347.7813,418.875 Q346.4375,418.875 345.75,419.9531 Q345.0625,421.0156 345.0625,423.1094 Q345.0625,425.2031 345.75,426.2813 Q346.4375,427.3438 347.7813,427.3438 Q348.4063,427.3438 349,427.0781 Q349.5938,426.7969 350.2188,426.2188 L350.2188,428.9375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="367.75" y="428.1436">RenderWindow</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="800" y1="439.2969" y2="439.2969"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="800" y1="447.2969" y2="447.2969"/><ellipse cx="18" cy="460.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="768" x="27" y="464.292">RenderWindow(eros::Logger* logger,WindowSize size, uint16_t mainWindowWidth,uint16_t mainWindowHeight)</text><ellipse cx="18" cy="477.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="27" y="480.5889">bool init()</text><ellipse cx="18" cy="493.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="27" y="496.8857">void set_window_reference(WINDOW* win)</text><ellipse cx="18" cy="509.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="27" y="513.1826">WINDOW* get_window_reference()</text><ellipse cx="18" cy="526.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="27" y="529.4795">ScreenCoordinatePixel getActualSize()</text><ellipse cx="18" cy="542.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="27" y="545.7764">bool isFocused()</text><ellipse cx="18" cy="558.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="27" y="562.0732">void setFocused(bool v)</text></g><!--MD5=[fa22f29c53ed6d2510bea2e0aa245b7f]
class Window--><g id="elem_Window"><rect codeLine="12" fill="#F1F1F1" height="80.5938" id="Window" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="292" y="266.2969"/><ellipse cx="372.75" cy="282.2969" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M372.2344,282.8594 Q370.375,282.1563 369.7188,281.3906 Q369.0781,280.6094 369.0781,279.2969 Q369.0781,277.6094 370.1563,276.6406 Q371.2344,275.6719 373.1094,275.6719 Q373.9688,275.6719 374.8125,275.875 Q375.6719,276.0625 376.5156,276.4531 L376.5156,278.8438 Q375.7344,278.2813 374.9063,278 Q374.0938,277.7031 373.2969,277.7031 Q372.4219,277.7031 371.9375,278.0625 Q371.4688,278.4219 371.4688,279.0781 Q371.4688,279.5938 371.8125,279.9375 Q372.1563,280.2656 373.25,280.6719 L374.3125,281.0781 Q375.7969,281.625 376.5,282.5313 Q377.2188,283.4375 377.2188,284.8125 Q377.2188,286.6875 376.1094,287.6094 Q375,288.5313 372.75,288.5313 Q371.8281,288.5313 370.9063,288.3125 Q369.9844,288.0938 369.125,287.6719 L369.125,285.1406 Q370.0938,285.8281 371.0156,286.1719 Q371.9375,286.5156 372.8281,286.5156 Q373.7344,286.5156 374.2344,286.1094 Q374.7344,285.6875 374.7344,284.9531 Q374.7344,284.3906 374.3906,283.9844 Q374.0625,283.5625 373.4375,283.3125 L372.2344,282.8594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="393.25" y="287.1436">Window</text><line style="stroke:#181818;stroke-width:0.5;" x1="293" x2="515" y1="298.2969" y2="298.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="298" y="315.292">IWindow windowData</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="298" y="331.5889">RenderWindow windowRender</text><line style="stroke:#181818;stroke-width:0.5;" x1="293" x2="515" y1="338.8906" y2="338.8906"/></g><!--MD5=[42b29d70891112948960c3be85523e9d]
class RenderEngine--><g id="elem_RenderEngine"><rect codeLine="16" fill="#F1F1F1" height="162.0781" id="RenderEngine" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="675" x="66.5" y="44.2969"/><ellipse cx="350.25" cy="60.2969" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M353.2188,65.9375 Q352.6406,66.2344 352,66.375 Q351.3594,66.5313 350.6563,66.5313 Q348.1563,66.5313 346.8281,64.8906 Q345.5156,63.2344 345.5156,60.1094 Q345.5156,56.9844 346.8281,55.3281 Q348.1563,53.6719 350.6563,53.6719 Q351.3594,53.6719 352,53.8281 Q352.6563,53.9844 353.2188,54.2813 L353.2188,57 Q352.5938,56.4219 352,56.1563 Q351.4063,55.875 350.7813,55.875 Q349.4375,55.875 348.75,56.9531 Q348.0625,58.0156 348.0625,60.1094 Q348.0625,62.2031 348.75,63.2813 Q349.4375,64.3438 350.7813,64.3438 Q351.4063,64.3438 352,64.0781 Q352.5938,63.7969 353.2188,63.2188 L353.2188,65.9375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="370.75" y="65.1436">RenderEngine</text><line style="stroke:#181818;stroke-width:0.5;" x1="67.5" x2="740.5" y1="76.2969" y2="76.2969"/><line style="stroke:#181818;stroke-width:0.5;" x1="67.5" x2="740.5" y1="84.2969" y2="84.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="663" x="72.5" y="101.292">RenderEngine(eros::Logger* logger, std::map&lt;IWindow::WindowType, IWindow&gt; dataWindows)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="72.5" y="117.5889">bool initScreen()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="544" x="72.5" y="133.8857">bool update(double dt, std::map&lt;IWindow::WindowType, IWindow*&gt; windows)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="72.5" y="150.1826">bool shouldKill()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="72.5" y="166.4795">bool incrementFocus();</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="506" x="72.5" y="182.7764">bool renderWindow(IWindow windowData, RenderWindow renderWindow)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="402" x="72.5" y="199.0732">std::map&lt;IWindow::WindowType, Window&gt; getWindows()</text></g><!--MD5=[61b549951eddeea50c1acfb6f9e16dcc]
link Window to RenderWindow--><g id="link_Window_RenderWindow"><path codeLine="25" d="M404,347.6369 C404,363.6869 404,382.8569 404,401.7769 " fill="none" id="Window-to-RenderWindow" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="404,407.1069,408,398.1069,404,402.1069,400,398.1069,404,407.1069" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d0408bc655439aadff4d5fb41b79da4a]
link RenderEngine to Window--><g id="link_RenderEngine_Window"><path codeLine="26" d="M404,206.3369 C404,222.0669 404,238.1969 404,252.7669 " fill="none" id="RenderEngine-to-Window" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="404,266.1969,408,260.1969,404,254.1969,400,260.1969,404,266.1969" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="396.4203" y="255.3418">*</text></g><!--MD5=[9d44a82f54e80bf4f5a81addf128b3b5]
@startuml
title "Render Engine"
class RenderWindow {
    +RenderWindow(eros::Logger* logger,WindowSize size, uint16_t mainWindowWidth,uint16_t mainWindowHeight)
    +bool init()
    +void set_window_reference(WINDOW* win)
    +WINDOW* get_window_reference()
    +ScreenCoordinatePixel getActualSize() 
    +bool isFocused()
    +void setFocused(bool v)
}

struct Window {
    IWindow windowData
    RenderWindow windowRender
}
class RenderEngine {
    RenderEngine(eros::Logger* logger, std::map<IWindow::WindowType, IWindow> dataWindows)
    bool initScreen()
    bool update(double dt, std::map<IWindow::WindowType, IWindow*> windows)
    bool shouldKill()
    bool incrementFocus();
    bool renderWindow(IWindow windowData, RenderWindow renderWindow)
    std::map<IWindow::WindowType, Window> getWindows() 
}
Window - -> RenderWindow
RenderEngine - -* "*" Window
@enduml

PlantUML version 1.2022.8(Sun Sep 25 04:00:33 CDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>