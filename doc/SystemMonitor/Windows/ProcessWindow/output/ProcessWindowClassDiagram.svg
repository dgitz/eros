<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="863px" preserveAspectRatio="none" style="width:1671px;height:863px;background:#FFFFFF;" version="1.1" viewBox="0 0 1671 863" width="1671px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="26.2969" id="_title" style="stroke:none;stroke-width:1.0;" width="258" x="699.75" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="248" x="704.75" y="22.9951">Process Window Class Diagram</text><!--MD5=[c58e0bd06874a0c0f3955fe7b23323b6]
class WindowTable--><g id="elem_WindowTable"><rect codeLine="2" fill="#F1F1F1" height="48" id="WindowTable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="125" x="231" y="44.2969"/><ellipse cx="246" cy="60.2969" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M246.1094,55.6406 L244.9531,60.7188 L247.2813,60.7188 L246.1094,55.6406 Z M244.625,53.4063 L247.6094,53.4063 L250.9688,65.7969 L248.5156,65.7969 L247.75,62.7344 L244.4688,62.7344 L243.7188,65.7969 L241.2813,65.7969 L244.625,53.4063 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="93" x="260" y="65.1436">WindowTable</text><line style="stroke:#181818;stroke-width:0.5;" x1="232" x2="355" y1="76.2969" y2="76.2969"/><line style="stroke:#181818;stroke-width:0.5;" x1="232" x2="355" y1="84.2969" y2="84.2969"/></g><!--MD5=[a0f0c4aed4962e578fba1ead3631e8a3]
class ProcessWindow--><g id="elem_ProcessWindow"><rect codeLine="5" fill="#F1F1F1" height="194.6719" id="ProcessWindow" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="573" x="7" y="152.2969"/><ellipse cx="234.25" cy="168.2969" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M237.2188,173.9375 Q236.6406,174.2344 236,174.375 Q235.3594,174.5313 234.6563,174.5313 Q232.1563,174.5313 230.8281,172.8906 Q229.5156,171.2344 229.5156,168.1094 Q229.5156,164.9844 230.8281,163.3281 Q232.1563,161.6719 234.6563,161.6719 Q235.3594,161.6719 236,161.8281 Q236.6563,161.9844 237.2188,162.2813 L237.2188,165 Q236.5938,164.4219 236,164.1563 Q235.4063,163.875 234.7813,163.875 Q233.4375,163.875 232.75,164.9531 Q232.0625,166.0156 232.0625,168.1094 Q232.0625,170.2031 232.75,171.2813 Q233.4375,172.3438 234.7813,172.3438 Q235.4063,172.3438 236,172.0781 Q236.5938,171.7969 237.2188,171.2188 L237.2188,173.9375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="254.75" y="173.1436">ProcessWindow</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="579" y1="184.2969" y2="184.2969"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="194.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="27" y="201.292">ProcessManager processManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="579" y1="208.5938" y2="208.5938"/><ellipse cx="18" cy="222.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="27" y="225.5889">WindowSize getWindowSize()</text><ellipse cx="18" cy="238.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="27" y="241.8857">IRecord[] getRecords()</text><ellipse cx="18" cy="254.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="27" y="258.1826">bool new_heartbeat(eros::heartbeat msg)</text><ellipse cx="18" cy="271.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="27" y="274.4795">bool new_resource(eros::resource msg)</text><ellipse cx="18" cy="287.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="547" x="27" y="290.7764">bool new_nodeAlive(string hostName, string nodeName, double currentTime_s)</text><ellipse cx="18" cy="303.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="27" y="307.0732">bool keyPressed(KeyMap key)</text><ellipse cx="18" cy="320.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="27" y="323.3701">bool update(double currentTime_s)</text><ellipse cx="18" cy="336.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="222" x="27" y="339.667">string smallifyROSName(string v)</text></g><!--MD5=[21863f95080b8f4109c1a9d95286a4b5]
class ProcessManager--><g id="elem_ProcessManager"><rect codeLine="17" fill="#F1F1F1" height="162.0781" id="ProcessManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="573" x="615" y="168.7969"/><ellipse cx="839.25" cy="184.7969" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M842.2188,190.4375 Q841.6406,190.7344 841,190.875 Q840.3594,191.0313 839.6563,191.0313 Q837.1563,191.0313 835.8281,189.3906 Q834.5156,187.7344 834.5156,184.6094 Q834.5156,181.4844 835.8281,179.8281 Q837.1563,178.1719 839.6563,178.1719 Q840.3594,178.1719 841,178.3281 Q841.6563,178.4844 842.2188,178.7813 L842.2188,181.5 Q841.5938,180.9219 841,180.6563 Q840.4063,180.375 839.7813,180.375 Q838.4375,180.375 837.75,181.4531 Q837.0625,182.5156 837.0625,184.6094 Q837.0625,186.7031 837.75,187.7813 Q838.4375,188.8438 839.7813,188.8438 Q840.4063,188.8438 841,188.5781 Q841.5938,188.2969 842.2188,187.7188 L842.2188,190.4375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="859.75" y="189.6436">ProcessManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="616" x2="1187" y1="200.7969" y2="200.7969"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="623" y="211.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="635" y="217.792">Process[] processes</text><line style="stroke:#181818;stroke-width:0.5;" x1="616" x2="1187" y1="225.0938" y2="225.0938"/><ellipse cx="626" cy="238.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="635" y="242.0889">bool new_resourceUsed(eros::resource msg)</text><ellipse cx="626" cy="255.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="635" y="258.3857">bool new_heartbeat(eros::heartbeat msg)</text><ellipse cx="626" cy="271.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="547" x="635" y="274.6826">bool new_nodeAlive(string hostName, string nodeName, double currentTime_s)</text><ellipse cx="626" cy="287.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="635" y="290.9795">bool update(double currentTime_s)</text><ellipse cx="626" cy="303.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="302" x="635" y="307.2764">std::map&lt;string, IProcess&gt; getProcesses()</text><ellipse cx="626" cy="320.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="635" y="323.5732">string pretty()</text></g><!--MD5=[b65c54ea888a50a544aa2c259889669f]
class ProcessType--><g id="elem_ProcessType"><rect codeLine="28" fill="#F1F1F1" height="80.5938" id="ProcessType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="561.5" y="512.7969"/><ellipse cx="576.5" cy="528.7969" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M580.6094,534.7969 L572.8906,534.7969 L572.8906,522.4063 L580.6094,522.4063 L580.6094,524.5625 L575.3438,524.5625 L575.3438,527.2344 L580.1094,527.2344 L580.1094,529.3906 L575.3438,529.3906 L575.3438,532.6406 L580.6094,532.6406 L580.6094,534.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="590.5" y="533.6436">ProcessType</text><line style="stroke:#181818;stroke-width:0.5;" x1="562.5" x2="682.5" y1="544.7969" y2="544.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="567.5" y="561.792">EROS</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="567.5" y="578.0889">GENERIC</text><line style="stroke:#181818;stroke-width:0.5;" x1="562.5" x2="682.5" y1="585.3906" y2="585.3906"/></g><!--MD5=[0d6d37220beca730083f78973add654b]
class IProcess--><g id="elem_IProcess"><rect codeLine="33" fill="#F1F1F1" height="292.4531" id="IProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="365" x="719" y="407.2969"/><ellipse cx="868.75" cy="423.2969" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M864.6719,419.0625 L864.6719,416.9063 L872.0625,416.9063 L872.0625,419.0625 L869.5938,419.0625 L869.5938,427.1406 L872.0625,427.1406 L872.0625,429.2969 L864.6719,429.2969 L864.6719,427.1406 L867.1406,427.1406 L867.1406,419.0625 L864.6719,419.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="57" x="889.25" y="428.1436">IProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="720" x2="1083" y1="439.2969" y2="439.2969"/><line style="stroke:#181818;stroke-width:0.5;" x1="720" x2="1083" y1="447.2969" y2="447.2969"/><ellipse cx="730" cy="460.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="284" x="739" y="464.292">string ProcessTypeString(ProcessType v)</text><ellipse cx="730" cy="477.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="339" x="739" y="480.5889">ProcessType ProcessTypeEnum(std::string type)</text><ellipse cx="730" cy="493.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="213" x="739" y="496.8857">ProcessType getProcessType()</text><ellipse cx="730" cy="509.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="93" x="739" y="513.1826">string pretty()</text><ellipse cx="730" cy="526.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="243" x="739" y="529.4795">bool update(double currentTime_s)</text><ellipse cx="730" cy="542.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="156" x="739" y="545.7764">Level::Type getLevel()</text><ellipse cx="730" cy="558.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="157" x="739" y="562.0732">Node::State getState()</text><ellipse cx="730" cy="575.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="739" y="578.3701">string getNodeName()</text><ellipse cx="730" cy="591.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="739" y="594.667">string getHostName()</text><ellipse cx="730" cy="607.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="168" x="739" y="610.9639">uint64_t getAliveCount()</text><ellipse cx="730" cy="623.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="116" x="739" y="627.2607">uint64_t getPID()</text><ellipse cx="730" cy="640.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="739" y="643.5576">double getCPUUsed()</text><ellipse cx="730" cy="656.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="152" x="739" y="659.8545">double getRAMUsed()</text><ellipse cx="730" cy="672.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="184" x="739" y="676.1514">uint64_t getRestartCount()</text><ellipse cx="730" cy="689.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="218" x="739" y="692.4482">double getLastHeartbeatDelta()</text></g><!--MD5=[144f76846afcc462b9bf60cfd7bfab75]
class BaseProcess--><g id="elem_BaseProcess"><rect codeLine="53" fill="#F1F1F1" height="259.8594" id="BaseProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="270" x="1119.5" y="423.2969"/><ellipse cx="1206.75" cy="439.2969" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1206.8594,434.6406 L1205.7031,439.7188 L1208.0313,439.7188 L1206.8594,434.6406 Z M1205.375,432.4063 L1208.3594,432.4063 L1211.7188,444.7969 L1209.2656,444.7969 L1208.5,441.7344 L1205.2188,441.7344 L1204.4688,444.7969 L1202.0313,444.7969 L1205.375,432.4063 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="87" x="1227.25" y="444.1436">BaseProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="1120.5" x2="1388.5" y1="455.2969" y2="455.2969"/><line style="stroke:#181818;stroke-width:0.5;" x1="1120.5" x2="1388.5" y1="463.2969" y2="463.2969"/><ellipse cx="1130.5" cy="476.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="1139.5" y="480.292">ProcessType getProcessType()</text><ellipse cx="1130.5" cy="493.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1139.5" y="496.5889">string pretty()</text><ellipse cx="1130.5" cy="509.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="1139.5" y="512.8857">bool update(double currentTime_s)</text><ellipse cx="1130.5" cy="525.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="1139.5" y="529.1826">Level::Type getLevel()</text><ellipse cx="1130.5" cy="542.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="1139.5" y="545.4795">Node::State getState()</text><ellipse cx="1130.5" cy="558.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1139.5" y="561.7764">string getNodeName()</text><ellipse cx="1130.5" cy="574.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1139.5" y="578.0732">string getHostName()</text><ellipse cx="1130.5" cy="591.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="1139.5" y="594.3701">uint64_t getAliveCount()</text><ellipse cx="1130.5" cy="607.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1139.5" y="610.667">uint64_t getPID()</text><ellipse cx="1130.5" cy="623.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="1139.5" y="626.9639">double getCPUUsed()</text><ellipse cx="1130.5" cy="639.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="1139.5" y="643.2607">double getRAMUsed()</text><ellipse cx="1130.5" cy="656.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="1139.5" y="659.5576">uint64_t getRestartCount()</text><ellipse cx="1130.5" cy="672.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="1139.5" y="675.8545">double getLastHeartbeatDelta()</text></g><!--MD5=[2d9a29a7ddfe4e14a052fd7a874410ed]
class GenericProcess--><g id="elem_GenericProcess"><rect codeLine="69" fill="#F1F1F1" height="96.8906" id="GenericProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="348" x="873.5" y="759.2969"/><ellipse cx="988.25" cy="775.2969" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M991.2188,780.9375 Q990.6406,781.2344 990,781.375 Q989.3594,781.5313 988.6563,781.5313 Q986.1563,781.5313 984.8281,779.8906 Q983.5156,778.2344 983.5156,775.1094 Q983.5156,771.9844 984.8281,770.3281 Q986.1563,768.6719 988.6563,768.6719 Q989.3594,768.6719 990,768.8281 Q990.6563,768.9844 991.2188,769.2813 L991.2188,772 Q990.5938,771.4219 990,771.1563 Q989.4063,770.875 988.7813,770.875 Q987.4375,770.875 986.75,771.9531 Q986.0625,773.0156 986.0625,775.1094 Q986.0625,777.2031 986.75,778.2813 Q987.4375,779.3438 988.7813,779.3438 Q989.4063,779.3438 990,779.0781 Q990.5938,778.7969 991.2188,778.2188 L991.2188,780.9375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="1008.75" y="780.1436">GenericProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="874.5" x2="1220.5" y1="791.2969" y2="791.2969"/><line style="stroke:#181818;stroke-width:0.5;" x1="874.5" x2="1220.5" y1="799.2969" y2="799.2969"/><ellipse cx="884.5" cy="812.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="893.5" y="816.292">bool setNodeAlive(double currentTime_s)</text><ellipse cx="884.5" cy="829.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="893.5" y="832.5889">«override» bool update(double currentTime_s)</text><ellipse cx="884.5" cy="845.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="893.5" y="848.8857">string pretty()</text></g><!--MD5=[f7e45c116f707647c1bb072d92ccc21a]
class EROSProcess--><g id="elem_EROSProcess"><rect codeLine="75" fill="#F1F1F1" height="96.8906" id="EROSProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="408" x="1256.5" y="759.2969"/><ellipse cx="1408.75" cy="775.2969" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1411.7188,780.9375 Q1411.1406,781.2344 1410.5,781.375 Q1409.8594,781.5313 1409.1563,781.5313 Q1406.6563,781.5313 1405.3281,779.8906 Q1404.0156,778.2344 1404.0156,775.1094 Q1404.0156,771.9844 1405.3281,770.3281 Q1406.6563,768.6719 1409.1563,768.6719 Q1409.8594,768.6719 1410.5,768.8281 Q1411.1563,768.9844 1411.7188,769.2813 L1411.7188,772 Q1411.0938,771.4219 1410.5,771.1563 Q1409.9063,770.875 1409.2813,770.875 Q1407.9375,770.875 1407.25,771.9531 Q1406.5625,773.0156 1406.5625,775.1094 Q1406.5625,777.2031 1407.25,778.2813 Q1407.9375,779.3438 1409.2813,779.3438 Q1409.9063,779.3438 1410.5,779.0781 Q1411.0938,778.7969 1411.7188,778.2188 L1411.7188,780.9375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="1429.25" y="780.1436">EROSProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="1257.5" x2="1663.5" y1="791.2969" y2="791.2969"/><line style="stroke:#181818;stroke-width:0.5;" x1="1257.5" x2="1663.5" y1="799.2969" y2="799.2969"/><ellipse cx="1267.5" cy="812.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="382" x="1276.5" y="816.292">bool new_resourceused(eros::resource resourceUsed)</text><ellipse cx="1267.5" cy="829.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="326" x="1276.5" y="832.5889">bool new_heartbeat(eros::heartbeat heartbeat)</text><ellipse cx="1267.5" cy="845.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1276.5" y="848.8857">string pretty()</text></g><!--MD5=[980623c82e7acf061c2ba345e989597d]
reverse link WindowTable to ProcessWindow--><g id="link_WindowTable_ProcessWindow"><path codeLine="16" d="M293.5,112.7369 C293.5,124.7869 293.5,138.3769 293.5,152.1869 " fill="none" id="WindowTable-backto-ProcessWindow" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="286.5,112.3969,293.5,92.3969,300.5,112.3969,286.5,112.3969" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[03911c7817411d21ca08c5a6a5d35962]
link ProcessWindow to ProcessManager--><g id="link_ProcessWindow_ProcessManager"><path codeLine="27" d="M580.28,249.7969 C590.08,249.7969 599.87,249.7969 609.67,249.7969 " fill="none" id="ProcessWindow-to-ProcessManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="614.79,249.7969,605.79,245.7969,609.79,249.7969,605.79,253.7969,614.79,249.7969" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1749f25729a6638f4eafc49f548f21db]
link ProcessType to IProcess--><g id="link_ProcessType_IProcess"><path codeLine="32" d="M683.53,553.2969 C690.25,553.2969 696.97,553.2969 703.68,553.2969 " fill="none" id="ProcessType-to-IProcess" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="710.87" cy="553.2969" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="702.87" x2="718.87" y1="553.2969" y2="553.2969"/><line style="stroke:#181818;stroke-width:1.0;" x1="710.87" x2="710.87" y1="545.2969" y2="561.2969"/></g><!--MD5=[b31f449c72e9c97dae0165621b16972e]
link ProcessManager to IProcess--><g id="link_ProcessManager_IProcess"><path codeLine="52" d="M901.5,330.7969 C901.5,350.3969 901.5,372.0569 901.5,393.9269 " fill="none" id="ProcessManager-to-IProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="901.5,407.1869,905.5,401.1869,901.5,395.1869,897.5,401.1869,901.5,407.1869" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="894.3195" y="396.325">*</text></g><!--MD5=[db5570046c9854b4f5dd74c9a8b75827]
reverse link IProcess to BaseProcess--><g id="link_IProcess_BaseProcess"><path codeLine="68" d="M1104.31,553.2969 C1109.36,553.2969 1114.41,553.2969 1119.46,553.2969 " fill="none" id="IProcess-backto-BaseProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1104.21,560.2969,1084.21,553.2969,1104.21,546.2969,1104.21,560.2969" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a440f53d76e303947c2b947da661610e]
reverse link BaseProcess to GenericProcess--><g id="link_BaseProcess_GenericProcess"><path codeLine="81" d="M1135.88,698.9869 C1118.11,720.6669 1100.95,741.5969 1086.55,759.1569 " fill="none" id="BaseProcess-backto-GenericProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1130.48,694.5369,1148.57,683.5069,1141.31,703.4069,1130.48,694.5369" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2b86698cb13ddc377c21d25021917296]
reverse link BaseProcess to EROSProcess--><g id="link_BaseProcess_EROSProcess"><path codeLine="82" d="M1372.8,699.3069 C1390.39,720.8669 1407.38,741.6869 1421.64,759.1569 " fill="none" id="BaseProcess-backto-EROSProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1367.13,703.4269,1359.91,683.5069,1377.98,694.5769,1367.13,703.4269" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[520f500244b407d60d678110ca837ef0]
@startuml
title "Process Window Class Diagram"
abstract WindowTable {
    
}
class ProcessWindow {
    +WindowSize getWindowSize()
    +IRecord[] getRecords()
    +bool new_heartbeat(eros::heartbeat msg)
    +bool new_resource(eros::resource msg)
    +bool new_nodeAlive(string hostName, string nodeName, double currentTime_s)
    +bool keyPressed(KeyMap key)
    +bool update(double currentTime_s)
    +{static} string smallifyROSName(string v)
    -ProcessManager processManager
}
WindowTable <|- - ProcessWindow
class ProcessManager {
    +bool new_resourceUsed(eros::resource msg)
    +bool new_heartbeat(eros::heartbeat msg)
    +bool new_nodeAlive(string hostName, string nodeName, double currentTime_s)
    +bool update(double currentTime_s)
    +std::map<string, IProcess> getProcesses()
    +string pretty()

    -Process[] processes
}
ProcessWindow -> ProcessManager
enum ProcessType {
    EROS
    GENERIC
}
ProcessType -+ IProcess
interface IProcess {

    +{static} string ProcessTypeString(ProcessType v)
    +{static} ProcessType ProcessTypeEnum(std::string type)  
    +{abstract} ProcessType getProcessType()
    +{abstract} string pretty()
    +{abstract} bool update(double currentTime_s)
    +{abstract} Level::Type getLevel()
    +{abstract} Node::State getState() 
    +{abstract} string getNodeName()
    +{abstract} string getHostName()
    +{abstract} uint64_t getAliveCount()
    +{abstract} uint64_t getPID()
    +{abstract} double getCPUUsed()
    +{abstract} double getRAMUsed() 
    +{abstract} uint64_t getRestartCount() 
    +{abstract} double getLastHeartbeatDelta() 

}
ProcessManager - -* "*" IProcess
abstract BaseProcess {
    +ProcessType getProcessType()
    +string pretty()
    +bool update(double currentTime_s)
    +Level::Type getLevel()
    +Node::State getState() 
    +string getNodeName()
    +string getHostName()
    +uint64_t getAliveCount()
    +uint64_t getPID()
    +double getCPUUsed()
    +double getRAMUsed() 
    +uint64_t getRestartCount() 
    +double getLastHeartbeatDelta()
}
IProcess <|- BaseProcess
class GenericProcess {
    +bool setNodeAlive(double currentTime_s)
    +<<override>> bool update(double currentTime_s)
    +string pretty()

}
class EROSProcess {
    +bool new_resourceused(eros::resource resourceUsed)
    +bool new_heartbeat(eros::heartbeat heartbeat)
    +string pretty()

}
BaseProcess <|- - GenericProcess
BaseProcess <|- - EROSProcess

@enduml

PlantUML version 1.2022.8(Sun Sep 25 04:00:33 CDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>