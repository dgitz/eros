<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" data-diagram-type="CLASS" height="1144px" preserveAspectRatio="none" style="width:3714px;height:1144px;background:#FFFFFF;" version="1.1" viewBox="0 0 3714 1144" width="3714px" zoomAndPan="magnify"><title>Base Node and Process Class Diagram</title><defs/><g><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="301.8613" x="1699.21" y="22.9951">Base Node and Process Class Diagram</text><!--cluster eros--><g id="cluster_eros"><path d="M8.5,490.2469 L43.8506,490.2469 A3.75,3.75 0 0 1 46.3506,492.7469 L53.3506,512.5438 L1255.5,512.5438 A2.5,2.5 0 0 1 1258,515.0438 L1258,1134.7469 A2.5,2.5 0 0 1 1255.5,1137.2469 L8.5,1137.2469 A2.5,2.5 0 0 1 6,1134.7469 L6,492.7469 A2.5,2.5 0 0 1 8.5,490.2469 " fill="transparent" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="53.3506" y1="512.5438" y2="512.5438"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="34.3506" x="10" y="505.242">eros</text></g><!--class BaseNodeProcess--><g id="elem_BaseNodeProcess"><rect codeLine="3" fill="#F1F1F1" height="48" id="BaseNodeProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="156.291" x="666" y="1073.2469"/><ellipse cx="681" cy="1089.2469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M683.9688,1094.8875 Q683.3906,1095.1844 682.75,1095.325 Q682.1094,1095.4813 681.4063,1095.4813 Q678.9063,1095.4813 677.5781,1093.8406 Q676.2656,1092.1844 676.2656,1089.0594 Q676.2656,1085.9344 677.5781,1084.2781 Q678.9063,1082.6219 681.4063,1082.6219 Q682.1094,1082.6219 682.75,1082.7781 Q683.4063,1082.9344 683.9688,1083.2313 L683.9688,1085.95 Q683.3438,1085.3719 682.75,1085.1063 Q682.1563,1084.825 681.5313,1084.825 Q680.1875,1084.825 679.5,1085.9031 Q678.8125,1086.9656 678.8125,1089.0594 Q678.8125,1091.1531 679.5,1092.2313 Q680.1875,1093.2938 681.5313,1093.2938 Q682.1563,1093.2938 682.75,1093.0281 Q683.3438,1092.7469 683.9688,1092.1688 L683.9688,1094.8875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124.291" x="695" y="1094.0936">BaseNodeProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="667" x2="821.291" y1="1105.2469" y2="1105.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="667" x2="821.291" y1="1113.2469" y2="1113.2469"/></g><!--class BaseNode--><g id="elem_BaseNode"><rect codeLine="4" fill="#F1F1F1" height="48" id="BaseNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="102.6289" x="1075.5" y="1073.2469"/><ellipse cx="1090.5" cy="1089.2469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M1093.4688,1094.8875 Q1092.8906,1095.1844 1092.25,1095.325 Q1091.6094,1095.4813 1090.9063,1095.4813 Q1088.4063,1095.4813 1087.0781,1093.8406 Q1085.7656,1092.1844 1085.7656,1089.0594 Q1085.7656,1085.9344 1087.0781,1084.2781 Q1088.4063,1082.6219 1090.9063,1082.6219 Q1091.6094,1082.6219 1092.25,1082.7781 Q1092.9063,1082.9344 1093.4688,1083.2313 L1093.4688,1085.95 Q1092.8438,1085.3719 1092.25,1085.1063 Q1091.6563,1084.825 1091.0313,1084.825 Q1089.6875,1084.825 1089,1085.9031 Q1088.3125,1086.9656 1088.3125,1089.0594 Q1088.3125,1091.1531 1089,1092.2313 Q1089.6875,1093.2938 1091.0313,1093.2938 Q1091.6563,1093.2938 1092.25,1093.0281 Q1092.8438,1092.7469 1093.4688,1092.1688 L1093.4688,1094.8875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70.6289" x="1104.5" y="1094.0936">BaseNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="1076.5" x2="1177.1289" y1="1105.2469" y2="1105.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="1076.5" x2="1177.1289" y1="1113.2469" y2="1113.2469"/></g><!--class Level::Type--><g id="elem_Level::Type"><rect codeLine="6" fill="#F1F1F1" height="48" id="Level::Type" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112.9717" x="30.5" y="533.2469"/><ellipse cx="45.5" cy="549.2469" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M49.6094,555.2469 L41.8906,555.2469 L41.8906,542.8563 L49.6094,542.8563 L49.6094,545.0125 L44.3438,545.0125 L44.3438,547.6844 L49.1094,547.6844 L49.1094,549.8406 L44.3438,549.8406 L44.3438,553.0906 L49.6094,553.0906 L49.6094,555.2469 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80.9717" x="59.5" y="554.0936">Level::Type</text><line style="stroke:#181818;stroke-width:0.5;" x1="31.5" x2="142.4717" y1="565.2469" y2="565.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="31.5" x2="142.4717" y1="573.2469" y2="573.2469"/></g><!--class Diagnostic::DiagnosticDefinition--><g id="elem_Diagnostic::DiagnosticDefinition"><rect codeLine="7" fill="#F1F1F1" height="48" id="Diagnostic::DiagnosticDefinition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="257.1143" x="178.5" y="533.2469"/><ellipse cx="193.5" cy="549.2469" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M192.9844,549.8094 Q191.125,549.1063 190.4688,548.3406 Q189.8281,547.5594 189.8281,546.2469 Q189.8281,544.5594 190.9063,543.5906 Q191.9844,542.6219 193.8594,542.6219 Q194.7188,542.6219 195.5625,542.825 Q196.4219,543.0125 197.2656,543.4031 L197.2656,545.7938 Q196.4844,545.2313 195.6563,544.95 Q194.8438,544.6531 194.0469,544.6531 Q193.1719,544.6531 192.6875,545.0125 Q192.2188,545.3719 192.2188,546.0281 Q192.2188,546.5438 192.5625,546.8875 Q192.9063,547.2156 194,547.6219 L195.0625,548.0281 Q196.5469,548.575 197.25,549.4813 Q197.9688,550.3875 197.9688,551.7625 Q197.9688,553.6375 196.8594,554.5594 Q195.75,555.4813 193.5,555.4813 Q192.5781,555.4813 191.6563,555.2625 Q190.7344,555.0438 189.875,554.6219 L189.875,552.0906 Q190.8438,552.7781 191.7656,553.1219 Q192.6875,553.4656 193.5781,553.4656 Q194.4844,553.4656 194.9844,553.0594 Q195.4844,552.6375 195.4844,551.9031 Q195.4844,551.3406 195.1406,550.9344 Q194.8125,550.5125 194.1875,550.2625 L192.9844,549.8094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225.1143" x="207.5" y="554.0936">Diagnostic::DiagnosticDefinition</text><line style="stroke:#181818;stroke-width:0.5;" x1="179.5" x2="434.6143" y1="565.2469" y2="565.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="179.5" x2="434.6143" y1="573.2469" y2="573.2469"/></g><!--class Node::State--><g id="elem_Node::State"><rect codeLine="8" fill="#F1F1F1" height="48" id="Node::State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115.0293" x="860.5" y="533.2469"/><ellipse cx="875.5" cy="549.2469" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M879.6094,555.2469 L871.8906,555.2469 L871.8906,542.8563 L879.6094,542.8563 L879.6094,545.0125 L874.3438,545.0125 L874.3438,547.6844 L879.1094,547.6844 L879.1094,549.8406 L874.3438,549.8406 L874.3438,553.0906 L879.6094,553.0906 L879.6094,555.2469 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83.0293" x="889.5" y="554.0936">Node::State</text><line style="stroke:#181818;stroke-width:0.5;" x1="861.5" x2="974.5293" y1="565.2469" y2="565.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="861.5" x2="974.5293" y1="573.2469" y2="573.2469"/></g><!--class Logger--><g id="elem_Logger"><rect codeLine="9" fill="#F1F1F1" height="48" id="Logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="80.5078" x="1152.5" y="533.2469"/><ellipse cx="1167.5" cy="549.2469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M1170.4688,554.8875 Q1169.8906,555.1844 1169.25,555.325 Q1168.6094,555.4813 1167.9063,555.4813 Q1165.4063,555.4813 1164.0781,553.8406 Q1162.7656,552.1844 1162.7656,549.0594 Q1162.7656,545.9344 1164.0781,544.2781 Q1165.4063,542.6219 1167.9063,542.6219 Q1168.6094,542.6219 1169.25,542.7781 Q1169.9063,542.9344 1170.4688,543.2313 L1170.4688,545.95 Q1169.8438,545.3719 1169.25,545.1063 Q1168.6563,544.825 1168.0313,544.825 Q1166.6875,544.825 1166,545.9031 Q1165.3125,546.9656 1165.3125,549.0594 Q1165.3125,551.1531 1166,552.2313 Q1166.6875,553.2938 1168.0313,553.2938 Q1168.6563,553.2938 1169.25,553.0281 Q1169.8438,552.7469 1170.4688,552.1688 L1170.4688,554.8875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48.5078" x="1181.5" y="554.0936">Logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="1153.5" x2="1232.0078" y1="565.2469" y2="565.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="1153.5" x2="1232.0078" y1="573.2469" y2="573.2469"/></g><!--class ArmDisarm::State--><g id="elem_ArmDisarm::State"><rect codeLine="10" fill="#F1F1F1" height="48" id="ArmDisarm::State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157.3984" x="470.5" y="533.2469"/><ellipse cx="485.5" cy="549.2469" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M489.6094,555.2469 L481.8906,555.2469 L481.8906,542.8563 L489.6094,542.8563 L489.6094,545.0125 L484.3438,545.0125 L484.3438,547.6844 L489.1094,547.6844 L489.1094,549.8406 L484.3438,549.8406 L484.3438,553.0906 L489.6094,553.0906 L489.6094,555.2469 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125.3984" x="499.5" y="554.0936">ArmDisarm::State</text><line style="stroke:#181818;stroke-width:0.5;" x1="471.5" x2="626.8984" y1="565.2469" y2="565.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="471.5" x2="626.8984" y1="573.2469" y2="573.2469"/></g><!--class FileHelper::FileInfo--><g id="elem_FileHelper::FileInfo"><rect codeLine="11" fill="#F1F1F1" height="48" id="FileHelper::FileInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163.1064" x="662.5" y="533.2469"/><ellipse cx="677.5" cy="549.2469" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M681.6094,555.2469 L673.8906,555.2469 L673.8906,542.8563 L681.6094,542.8563 L681.6094,545.0125 L676.3438,545.0125 L676.3438,547.6844 L681.1094,547.6844 L681.1094,549.8406 L676.3438,549.8406 L676.3438,553.0906 L681.6094,553.0906 L681.6094,555.2469 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131.1064" x="691.5" y="554.0936">FileHelper::FileInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="663.5" x2="824.6064" y1="565.2469" y2="565.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="663.5" x2="824.6064" y1="573.2469" y2="573.2469"/></g><!--class Diagnostic--><g id="elem_Diagnostic"><rect codeLine="12" fill="#F1F1F1" height="48" id="Diagnostic" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="105.9443" x="1011" y="533.2469"/><ellipse cx="1026" cy="549.2469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M1028.9688,554.8875 Q1028.3906,555.1844 1027.75,555.325 Q1027.1094,555.4813 1026.4063,555.4813 Q1023.9063,555.4813 1022.5781,553.8406 Q1021.2656,552.1844 1021.2656,549.0594 Q1021.2656,545.9344 1022.5781,544.2781 Q1023.9063,542.6219 1026.4063,542.6219 Q1027.1094,542.6219 1027.75,542.7781 Q1028.4063,542.9344 1028.9688,543.2313 L1028.9688,545.95 Q1028.3438,545.3719 1027.75,545.1063 Q1027.1563,544.825 1026.5313,544.825 Q1025.1875,544.825 1024.5,545.9031 Q1023.8125,546.9656 1023.8125,549.0594 Q1023.8125,551.1531 1024.5,552.2313 Q1025.1875,553.2938 1026.5313,553.2938 Q1027.1563,553.2938 1027.75,553.0281 Q1028.3438,552.7469 1028.9688,552.1688 L1028.9688,554.8875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73.9443" x="1040" y="554.0936">Diagnostic</text><line style="stroke:#181818;stroke-width:0.5;" x1="1012" x2="1115.9443" y1="565.2469" y2="565.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="1012" x2="1115.9443" y1="573.2469" y2="573.2469"/></g><!--class BaseNodeProcess--><g id="elem_BaseNodeProcess"><rect codeLine="25" fill="#F1F1F1" height="813.9531" id="BaseNodeProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1492.8623" x="1274.5" y="150.2469"/><ellipse cx="1954.5356" cy="166.2469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M1957.5044,171.8875 Q1956.9263,172.1844 1956.2856,172.325 Q1955.645,172.4813 1954.9419,172.4813 Q1952.4419,172.4813 1951.1138,170.8406 Q1949.8013,169.1844 1949.8013,166.0594 Q1949.8013,162.9344 1951.1138,161.2781 Q1952.4419,159.6219 1954.9419,159.6219 Q1955.645,159.6219 1956.2856,159.7781 Q1956.9419,159.9344 1957.5044,160.2313 L1957.5044,162.95 Q1956.8794,162.3719 1956.2856,162.1063 Q1955.6919,161.825 1955.0669,161.825 Q1953.7231,161.825 1953.0356,162.9031 Q1952.3481,163.9656 1952.3481,166.0594 Q1952.3481,168.1531 1953.0356,169.2313 Q1953.7231,170.2938 1955.0669,170.2938 Q1955.6919,170.2938 1956.2856,170.0281 Q1956.8794,169.7469 1957.5044,169.1688 L1957.5044,171.8875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124.291" x="1975.0356" y="171.0936">BaseNodeProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="1275.5" x2="2766.3623" y1="182.2469" y2="182.2469"/><polygon fill="transparent" points="1285.5,190.8953,1289.5,194.8953,1285.5,198.8953,1281.5,194.8953" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104.5557" x="1294.5" y="199.242">Logger* logger</text><polygon fill="transparent" points="1285.5,207.1922,1289.5,211.1922,1285.5,215.1922,1281.5,211.1922" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145.667" x="1294.5" y="215.5389">std::string hostname</text><polygon fill="transparent" points="1285.5,223.4891,1289.5,227.4891,1285.5,231.4891,1281.5,227.4891" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197.7568" x="1294.5" y="231.8357">std::string base_node_name</text><polygon fill="transparent" points="1285.5,239.7859,1289.5,243.7859,1285.5,247.7859,1281.5,243.7859" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164.8828" x="1294.5" y="248.1326">Node::State node_state</text><polygon fill="transparent" points="1285.5,256.0828,1289.5,260.0828,1285.5,264.0828,1281.5,260.0828" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202.0771" x="1294.5" y="264.4295">Diagnostic diagnostic_helper</text><polygon fill="transparent" points="1285.5,272.3797,1289.5,276.3797,1285.5,280.3797,1281.5,276.3797" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149.3926" x="1294.5" y="280.7264">bool unittest_running</text><polygon fill="transparent" points="1285.5,288.6766,1289.5,292.6766,1285.5,296.6766,1281.5,292.6766" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236.4072" x="1294.5" y="297.0232">eros::ready_to_arm ready_to_arm</text><line style="stroke:#181818;stroke-width:0.5;" x1="1275.5" x2="2766.3623" y1="304.325" y2="304.325"/><ellipse cx="1285.5" cy="317.9734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="370.3711" x="1294.5" y="321.3201">Diagnostic::DiagnosticDefinition finish_initialization()</text><ellipse cx="1285.5" cy="334.2703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="80.7666" x="1294.5" y="337.617">void reset()</text><ellipse cx="1285.5" cy="350.5672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="502.6465" x="1294.5" y="353.9139">Diagnostic::DiagnosticDefinition update(double t_dt, double t_ros_time)</text><ellipse cx="1285.5" cy="366.8641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="631.3877" x="1294.5" y="370.2107">std::vector&lt;Diagnostic::DiagnosticDefinition&gt; new_commandmsg(eros::command t_msg)</text><ellipse cx="1285.5" cy="383.1609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="511.2871" x="1294.5" y="386.5076">std::vector&lt;Diagnostic::DiagnosticDefinition&gt; check_programvariables()</text><ellipse cx="1285.5" cy="399.4578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="100.4131" x="1294.5" y="402.8045">void cleanup()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4.4502" x="1294.5" y="419.1014">&#160;</text><ellipse cx="1285.5" cy="432.0516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1466.8623" x="1294.5" y="435.3982">void initialize(std::string t_base_node_name,std::string t_node_name,std::string t_hostname,System::MainSystem t_system,System::SubSystem t_subsystem,System::Component t_component,Logger* _logger)</text><ellipse cx="1285.5" cy="448.3484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="591.7803" x="1294.5" y="451.6951">bool enable_diagnostics(std::vector&lt;Diagnostic::DiagnosticType&gt; diagnostic_types)</text><ellipse cx="1285.5" cy="464.6453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="628.6738" x="1294.5" y="467.992">Diagnostic::DiagnosticDefinition update_diagnostic(Diagnostic::DiagnosticDefinition diag)</text><ellipse cx="1285.5" cy="480.9422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1173.0537" x="1294.5" y="484.2889">Diagnostic::DiagnosticDefinition update_diagnostic(Diagnostic::DiagnosticType diagnostic_type,Level::Type level,Diagnostic::Message message,std::string description)</text><ellipse cx="1285.5" cy="497.2391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198.7959" x="1294.5" y="500.5857">Node::State get_nodestate()</text><ellipse cx="1285.5" cy="513.5359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148.21" x="1294.5" y="516.8826">double get_runtime()</text><ellipse cx="1285.5" cy="529.8328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277.3203" x="1294.5" y="533.1795">eros::ready_to_arm get_ready_to_arm()</text><ellipse cx="1285.5" cy="546.1297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186.5801" x="1294.5" y="549.4764">std::string get_hostname()</text><ellipse cx="1285.5" cy="562.4266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="377.9043" x="1294.5" y="565.7732">Diagnostic::DiagnosticDefinition get_root_diagnostic()</text><ellipse cx="1285.5" cy="578.7234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448.793" x="1294.5" y="582.0701">std::vector&lt;Diagnostic::DiagnosticDefinition&gt; get_diagnostics()</text><ellipse cx="1285.5" cy="595.0203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="495.1475" x="1294.5" y="598.367">std::vector&lt;Diagnostic::DiagnosticDefinition&gt; get_latest_diagnostics()</text><ellipse cx="1285.5" cy="611.3172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182.3213" x="1294.5" y="614.6639">double get_system_time()</text><ellipse cx="1285.5" cy="627.6141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155.21" x="1294.5" y="630.9607">double get_run_time()</text><ellipse cx="1285.5" cy="643.9109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145.4688" x="1294.5" y="647.2576">Logger* get_logger()</text><ellipse cx="1285.5" cy="660.2078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="846.2959" x="1294.5" y="663.5545">json read_configuration(std::string device_name,bool include_self = true,std::string file_path = "/config/DeviceList.json")</text><ellipse cx="1285.5" cy="676.5047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344.6748" x="1294.5" y="679.8514">bool request_statechange(Node::State newstate)</text><ellipse cx="1285.5" cy="692.8016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="572.0176" x="1294.5" y="696.1482">Diagnostic::DiagnosticDefinition base_update(double t_dt, double t_system_time)</text><ellipse cx="1285.5" cy="709.0984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376.8105" x="1294.5" y="712.4451">std::vector&lt;std::string&gt; get_files_indir(std::string dir)</text><ellipse cx="1285.5" cy="725.3953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140.7861" x="1294.5" y="728.742">void base_cleanup()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4.4502" x="1294.5" y="745.0389">&#160;</text><ellipse cx="1285.5" cy="757.9891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="280.3965" x="1294.5" y="761.3357">ros::Time convert_time(struct timeval t)</text><ellipse cx="1285.5" cy="774.2859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="230.6787" x="1294.5" y="777.6326">ros::Time convert_time(double t)</text><ellipse cx="1285.5" cy="790.5828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="507.2266" x="1294.5" y="793.9295">eros::command convert_fromptr(const eros::command::ConstPtr&amp; t_ptr)</text><ellipse cx="1285.5" cy="806.8797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="559.7676" x="1294.5" y="810.2264">eros::ready_to_arm convert_fromptr(const eros::ready_to_arm::ConstPtr&amp; t_ptr)</text><ellipse cx="1285.5" cy="823.1766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="592.1563" x="1294.5" y="826.5232">eros::command_state convert_fromptr(const eros::command_state::ConstPtr&amp; t_ptr)</text><ellipse cx="1285.5" cy="839.4734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="511.5742" x="1294.5" y="842.8201">eros::diagnostic convert_fromptr(const eros::diagnostic::ConstPtr&amp; t_ptr)</text><ellipse cx="1285.5" cy="855.7703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="474.7285" x="1294.5" y="859.117">eros::diagnostic convert(const Diagnostic::DiagnosticDefinition def)</text><ellipse cx="1285.5" cy="872.0672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="482.542" x="1294.5" y="875.4139">Diagnostic::DiagnosticDefinition convert(const eros::diagnostic diag)</text><ellipse cx="1285.5" cy="888.3641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="334.3867" x="1294.5" y="891.7107">eros::armed_state convert(ArmDisarm::State v)</text><ellipse cx="1285.5" cy="904.6609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="334.3867" x="1294.5" y="908.0076">ArmDisarm::State convert(eros::armed_state v)</text><ellipse cx="1285.5" cy="920.9578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="287.041" x="1294.5" y="924.3045">std::string sanitize_path(std::string path)</text><ellipse cx="1285.5" cy="937.2547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="342.5283" x="1294.5" y="940.6014">FileHelper::FileInfo read_file(std::string file_path)</text><ellipse cx="1285.5" cy="953.5516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="584.5273" x="1294.5" y="956.8982">FileHelper::FileInfo write_file(std::string full_path, char* bytes, uint64_t byte_count)</text></g><!--class BaseNode--><g id="elem_BaseNode"><rect codeLine="77" fill="#F1F1F1" height="911.7344" id="BaseNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="904.2813" x="2803" y="101.2469"/><ellipse cx="3215.5762" cy="117.2469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M3218.5449,122.8875 Q3217.9668,123.1844 3217.3262,123.325 Q3216.6855,123.4813 3215.9824,123.4813 Q3213.4824,123.4813 3212.1543,121.8406 Q3210.8418,120.1844 3210.8418,117.0594 Q3210.8418,113.9344 3212.1543,112.2781 Q3213.4824,110.6219 3215.9824,110.6219 Q3216.6855,110.6219 3217.3262,110.7781 Q3217.9824,110.9344 3218.5449,111.2313 L3218.5449,113.95 Q3217.9199,113.3719 3217.3262,113.1063 Q3216.7324,112.825 3216.1074,112.825 Q3214.7637,112.825 3214.0762,113.9031 Q3213.3887,114.9656 3213.3887,117.0594 Q3213.3887,119.1531 3214.0762,120.2313 Q3214.7637,121.2938 3216.1074,121.2938 Q3216.7324,121.2938 3217.3262,121.0281 Q3217.9199,120.7469 3218.5449,120.1688 L3218.5449,122.8875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70.6289" x="3236.0762" y="122.0936">BaseNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="2804" x2="3706.2813" y1="133.2469" y2="133.2469"/><line style="stroke:#181818;stroke-width:0.5;" x1="2804" x2="3706.2813" y1="141.2469" y2="141.2469"/><ellipse cx="2814" cy="154.8953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="77.8887" x="2823" y="158.242">bool start()</text><ellipse cx="2814" cy="171.1922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114.5977" x="2823" y="174.5389">bool run_loop1()</text><ellipse cx="2814" cy="187.4891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114.5977" x="2823" y="190.8357">bool run_loop2()</text><ellipse cx="2814" cy="203.7859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114.5977" x="2823" y="207.1326">bool run_loop3()</text><ellipse cx="2814" cy="220.0828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="118.7266" x="2823" y="223.4295">bool run_001hz()</text><ellipse cx="2814" cy="236.3797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="109.8193" x="2823" y="239.7264">bool run_01hz()</text><ellipse cx="2814" cy="252.6766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="153.7266" x="2823" y="256.0232">bool run_01hz_noisy()</text><ellipse cx="2814" cy="268.9734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="100.9121" x="2823" y="272.3201">bool run_1hz()</text><ellipse cx="2814" cy="285.2703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="109.8193" x="2823" y="288.617">bool run_10hz()</text><ellipse cx="2814" cy="301.5672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="128.1055" x="2823" y="304.9139">void thread_loop()</text><ellipse cx="2814" cy="317.8641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="525.8203" x="2823" y="321.2107">bool changenodestate_service(eros::srv_change_nodestate::Request &amp;req,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316.7158" x="2823" y="337.5076">eros::srv_change_nodestate::Response &amp;res)</text><ellipse cx="2814" cy="350.4578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="459.9834" x="2823" y="353.8045">void command_Callback(const eros::command::ConstPtr &amp;t_msg)</text><ellipse cx="2814" cy="366.7547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="100.4131" x="2823" y="370.1014">void cleanup()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4.4502" x="2823" y="386.3982">&#160;</text><ellipse cx="2814" cy="399.3484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250.6055" x="2823" y="402.6951">void set_no_launch_enabled(bool v)</text><ellipse cx="2814" cy="415.6453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215.0313" x="2823" y="418.992">void disable_armedstate_sub()</text><ellipse cx="2814" cy="431.9422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209.2617" x="2823" y="435.2889">void disable_modestate_sub()</text><ellipse cx="2814" cy="448.2391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271.8926" x="2823" y="451.5857">void enable_ready_to_arm_pub(bool v)</text><ellipse cx="2814" cy="464.5359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391.6582" x="2823" y="467.8826">void set_basenodename(std::string t_base_node_name)</text><ellipse cx="2814" cy="480.8328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="878.2813" x="2823" y="484.1795">void initialize_diagnostic(System::MainSystem t_system,System::SubSystem t_subsystem,System::Component t_component)</text><ellipse cx="2814" cy="497.1297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="869.2578" x="2823" y="500.4764">void initialize_firmware(uint16_t t_major_version,uint16_t t_minor_version,uint16_t t_build_number,std::string t_description)</text><ellipse cx="2814" cy="513.4266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317.9121" x="2823" y="516.7732">void set_nodename(std::string t_node_name)</text><ellipse cx="2814" cy="529.7234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="397.4072" x="2823" y="533.0701">Diagnostic::DiagnosticDefinition preinitialize_basenode()</text><ellipse cx="2814" cy="546.0203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240.7412" x="2823" y="549.367">void set_loop1_rate(double t_rate)</text><ellipse cx="2814" cy="562.3172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240.7412" x="2823" y="565.6639">void set_loop2_rate(double t_rate)</text><ellipse cx="2814" cy="578.6141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240.7412" x="2823" y="581.9607">void set_loop3_rate(double t_rate)</text><ellipse cx="2814" cy="594.9109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223.542" x="2823" y="598.2576">void set_ros_rate(double t_rate)</text><ellipse cx="2814" cy="611.2078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259.4922" x="2823" y="614.5545">bool update(Node::State node_state)</text><ellipse cx="2814" cy="627.5047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224.6699" x="2823" y="630.8514">std::string get_basenodename()</text><ellipse cx="2814" cy="643.8016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191.2969" x="2823" y="647.1482">std::string get_nodename()</text><ellipse cx="2814" cy="660.0984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243.5371" x="2823" y="663.4451">std::string read_robotnamespace()</text><ellipse cx="2814" cy="676.3953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399.2119" x="2823" y="679.742">void set_robotnamespace(std::string _robot_namespace)</text><ellipse cx="2814" cy="692.6922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234.6914" x="2823" y="696.0389">std::string get_robotnamespace()</text><ellipse cx="2814" cy="708.9891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215.0107" x="2823" y="712.3357">std::string get_verbositylevel()</text><ellipse cx="2814" cy="725.2859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391.8018" x="2823" y="728.6326">boost::shared_ptr&lt;ros::NodeHandle&gt; get_nodehandle()</text><ellipse cx="2814" cy="741.5828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145.4688" x="2823" y="744.9295">Logger *get_logger()</text><ellipse cx="2814" cy="757.8797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="346.0215" x="2823" y="761.2264">void update_ready_to_arm(eros::ready_to_arm v)</text><ellipse cx="2814" cy="774.1766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="473.2178" x="2823" y="777.5232">double measure_time_diff(ros::Time t_timer_a, ros::Time t_timer_b)</text><ellipse cx="2814" cy="790.4734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448.2803" x="2823" y="793.8201">eros::resource convert(ResourceMonitor::ResourceInfo res_info)</text><ellipse cx="2814" cy="806.7703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410.8262" x="2823" y="810.117">void new_ppsmsg(const std_msgs::Bool::ConstPtr &amp;t_msg)</text><ellipse cx="2814" cy="823.0672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="655.04" x="2823" y="826.4139">bool firmware_service(eros::srv_firmware::Request &amp;req, eros::srv_firmware::Response &amp;res)</text><ellipse cx="2814" cy="839.3641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="437.7461" x="2823" y="842.7107">bool loggerlevel_service(eros::srv_logger_level::Request &amp;req,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272.6787" x="2823" y="859.0076">eros::srv_logger_level::Response &amp;res)</text><ellipse cx="2814" cy="871.9578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463.6475" x="2823" y="875.3045">bool diagnostics_service(eros::srv_get_diagnostics::Request &amp;req,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297.124" x="2823" y="891.6014">eros::srv_get_diagnostics::Response &amp;res)</text><ellipse cx="2814" cy="904.5516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="489.1045" x="2823" y="907.8982">void armedstate_Callback(const eros::armed_state::ConstPtr &amp;t_msg)</text><ellipse cx="2814" cy="920.8484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="477.5654" x="2823" y="924.1951">void modestate_Callback(const eros::mode_state::ConstPtr &amp;t_msg)</text><ellipse cx="2814" cy="937.1453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.1396" x="2823" y="940.492">void base_reset()</text><ellipse cx="2814" cy="953.4422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="362.1953" x="2823" y="956.7889">std::string validate_robotnamespace(std::string str)</text><ellipse cx="2814" cy="969.7391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="186.5801" x="2823" y="973.0857">std::string get_hostname()</text><ellipse cx="2814" cy="986.0359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="543.3477" x="2823" y="989.3826">eros::armed_state convert_fromptr(const eros::armed_state::ConstPtr &amp;t_ptr)</text><ellipse cx="2814" cy="1002.3328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="531.8086" x="2823" y="1005.6795">eros::mode_state convert_fromptr(const eros::mode_state::ConstPtr &amp;t_ptr)</text></g><!--reverse link Logger to BaseNodeProcess--><g id="link_Logger_BaseNodeProcess"><path codeLine="15" d="M1199.4781,587.2419 C1214.7981,661.1319 1250.17,888.1769 1135,1013.2469 C1093.58,1058.2369 923.86,1080.6169 822.13,1090.1969 " fill="transparent" id="Logger-backto-BaseNodeProcess" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="1198.26,581.3669,1196.1705,590.9915,1199.2751,586.2628,1204.0039,589.3674,1198.26,581.3669" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link Level::Type to BaseNodeProcess--><g id="link_Level::Type_BaseNodeProcess"><path codeLine="16" d="M80.3472,593.1012 C67.0572,667.7712 38.7,893.3469 161,1013.2469 C231.04,1081.9069 523.6,1094.2769 665.77,1096.1569 " fill="transparent" id="Level::Type-backto-BaseNodeProcess" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="82.45,581.2869,77.4605,586.4931,80.3472,593.1012,85.3367,587.895,82.45,581.2869" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link Diagnostic::DiagnosticDefinition to BaseNodeProcess--><g id="link_Diagnostic::DiagnosticDefinition_BaseNodeProcess"><path codeLine="17" d="M307.5258,593.2527 C309.4758,667.3327 325.58,889.9169 453,1013.2469 C509.91,1068.3269 600.7,1087.3169 665.74,1093.6269 " fill="transparent" id="Diagnostic::DiagnosticDefinition-backto-BaseNodeProcess" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="307.21,581.2569,303.3693,587.3601,307.5258,593.2527,311.3665,587.1495,307.21,581.2569" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link Node::State to BaseNodeProcess--><g id="link_Node::State_BaseNodeProcess"><path codeLine="18" d="M920.2321,593.3597 C923.9921,663.5297 926.87,866.1569 843,1013.2469 C828.89,1037.9869 804.42,1058.6069 783.33,1073.1069 " fill="transparent" id="Node::State-backto-BaseNodeProcess" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="919.59,581.3769,915.9168,587.5823,920.2321,593.3597,923.9053,587.1543,919.59,581.3769" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link ArmDisarm::State to BaseNodeProcess--><g id="link_ArmDisarm::State_BaseNodeProcess"><path codeLine="19" d="M548.7641,593.4368 C548.9641,663.7868 557.14,866.8369 645,1013.2469 C659.77,1037.8669 684.52,1058.6169 705.58,1073.2069 " fill="transparent" id="ArmDisarm::State-backto-BaseNodeProcess" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="548.73,581.4369,544.7471,587.4482,548.7641,593.4368,552.747,587.4255,548.73,581.4369" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link FileHelper::FileInfo to BaseNodeProcess--><g id="link_FileHelper::FileInfo_BaseNodeProcess"><path codeLine="20" d="M744,593.3669 C744,681.6569 744,985.0669 744,1073.2169 " fill="transparent" id="FileHelper::FileInfo-backto-BaseNodeProcess" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="744,581.3669,740,587.3669,744,593.3669,748,587.3669,744,581.3669" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link Diagnostic to BaseNodeProcess--><g id="link_Diagnostic_BaseNodeProcess"><path codeLine="21" d="M1069.7737,593.3005 C1080.8937,666.4405 1102.95,883.2069 993,1013.2469 C950.93,1063.0069 878.16,1083.0669 822.12,1091.0969 " fill="transparent" id="Diagnostic-backto-BaseNodeProcess" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="1067.97,581.4369,1064.9173,587.9699,1069.7737,593.3005,1072.8264,586.7675,1067.97,581.4369" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link Diagnostic to BaseNode--><g id="link_Diagnostic_BaseNode"><path codeLine="22" d="M1068.1058,593.2854 C1078.4458,681.5754 1113.98,985.0669 1124.3,1073.2169 " fill="transparent" id="Diagnostic-backto-BaseNode" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="1066.71,581.3669,1063.4351,587.7914,1068.1058,593.2854,1071.3808,586.8609,1066.71,581.3669" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link Logger to BaseNode--><g id="link_Logger_BaseNode"><path codeLine="23" d="M1188.699,593.2776 C1177.869,681.5676 1140.64,985.0669 1129.83,1073.2169 " fill="transparent" id="Logger-backto-BaseNode" style="stroke:#181818;stroke-width:1;"/><polygon fill="#181818" points="1190.16,581.3669,1185.4592,586.8352,1188.699,593.2776,1193.3997,587.8092,1190.16,581.3669" style="stroke:#181818;stroke-width:1;"/></g><!--reverse link Diagnostic to Diagnostic::DiagnosticDefinition--><g id="link_Diagnostic_Diagnostic::DiagnosticDefinition"><path codeLine="24" d="M1073.1832,517.3774 C1091.7932,432.4074 1136.69,163.8269 975.5,71.2469 C926.84,43.2969 519.16,43.2969 470.5,71.2469 C303.37,167.2369 301.99,448.4669 305.54,532.9669 " fill="transparent" id="Diagnostic-backto-Diagnostic::DiagnosticDefinition" style="stroke:#181818;stroke-width:1;"/><ellipse cx="1071.4716" cy="525.1921" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1;"/><line style="stroke:#181818;stroke-width:1;" x1="1073.1832" x2="1069.76" y1="517.3774" y2="533.0069"/><line style="stroke:#181818;stroke-width:1;" x1="1079.2863" x2="1063.6568" y1="526.9037" y2="523.4805"/></g><!--SRC=[jLXHRzis47xtho0Qe51IPstQeGz2Lc1jC7H0CnHDtmbAecssagYHb0itI7_xZaV9eYHAShFD3ud4EtuaZtVVtSa8atFobcbE_f8P9wpCo4SbKwurUPSp-7iZs5QnObMnz2lRSiALrEH-HU2NeeATRESsqm8I739ooysEgsQk_V6oBiW7lkTv77y-LFmeq4RLgS6bIwcDIEEuUxxX6r4A8sJP1x8hnV6TOQO3Sllu8BTRhlhQlwlYHcYcYk4KbFuXSlwUvnLNSMoV_omtSW3QRGW53wk7bLk7N5zUZepYdP9S1EHBHmrEyauSb0_F65GA7NLXYpyZRetI6_DqdrqkNtFGpne_UdRF4d0Nbfg7HI1Y7_IEuYlBnNTcHwFp4T1UYemehha921TNgQiCZ1rbiauWjWpDp9eSNo1wg1457-DgayNndgT6gkkbDTwGad-ZgImA2DX2RoCRbN7S3C0oCFPlLqXtFFrAAoLj-E-P4WnEeADp4ZPNcdDMrXKOpCbny6Xf7k7YC4EKMzXV0fT9IxXDMhA2h_l2gV4Tx167xmxQSF3gMoPAzmnIZGz7sLsTTA8w6KZVoQAI9IyDIDFsUUryzOBG71yQ2oPIva0BzlWqEvfAHylcjE7-XdHpg841tS2Uw4VUaj7Y5AlxNyCZPmtEiFRvBBVFQt_oBSIdpHM5-z-xnephL8dARg7PgKzZa2Fm-hLzQuEl2HuhKtLfewULEBTNd6K7QYG5gdDQta2hwk_1whJE59rgBmIMqlWMyx5F3YmBvFlHeq5oi94EOdaMSuvFdTL8oA3KjsWR0eYFpwtaYmOZMCj2m9GRiQsLey_-vUv5siGkXeqeqxo6QDOytv3V2EJrlZTi8EFGYfaT29_yUEwGdzyWp0UXpIzsrIT-82h-TsrFZHwIxbYvvP7lGK2CA3hrMf69PYdRis3WghpJk5knHzAGOpAX-hOHBQ4WDUAwGzAyjriNwGD1l_uCAn8moPuhuowfAOpiyvxbn9oVDgqzob2zdpNQAHi5X6XK1E_Qz7KiSSBWHwEUWc50AOpO2yWvM5_nHEnc9-x-JzcpqpmHlOkbMUZCywf7uZPuovJEDqF8nJdz9KOxyBB4O9jm3NnWscXKHUw7SqSQxTGnw6Yk7o6QsVr_TuJGYnqxC9mPB5oHdsm4Ha6MEGdZcnAG5ySWTPuZo1fA8mOKcHo0VjUa5gLv_Iir-0xS21cg2UUpbapphW4vyo7R73IMzEiZ9- -nd1NfO-DoTjE_tIPLx_1eJWF9imO3Oyu0sYzX7ISA1At_ibf1RzElmGF5D-B3ZbIePdRC3QacbxAwMb9ukQJmQaxXnOkhtVTPXHFaO7kX3tDQ2o1NBu9of7wpGpUr9vc2S8djM0b1_bGs9JOHfTMUEeskM8hZJoupagUG8jV7RdNnDm-feJJMt6BgYTEqDFkEvNd2qg_pUOCydMXEffi8ZJKXL3jrcUweAyIp2CsqzpDg1XnaQtJacyPiTHA5L8hEi0EDfixt_PzMe3DUpcxBXgar5nQISntEUR0fyal9_wcdcLXu8rJnZIaUMVQwUatjd89zaOe2SMl88MjV8Cgm8Ab5dj6oBXAk1htQkCptxZ9eiA6j5hDSfRXtelOgek5oI3bKzUexrHM8FRsN9-gzEa7FTlgJMewDNTKPvlM9jgNdSHCwSt9a7YKJYOb7LomTMsmWzgSx6JqA9tOGNc2e1HwLI2tC0Jl8g3EDDg07EHRA1gYehf59h9NU0vNa_Ctna3jyxxSkv6BSkk39cdwtrni6Cj- -tq8LdEbQSQoZ8LmtcwYhiLrrhIXRa_5WCcXHjQnLsfL6dvg1MmakB1LIBGuqPOpj83RItx_zubDLsdxjSGmBvhHK2kXlmPkcA1OzhGttG1vfHOFyGS8QutI0-CxSU8s19PoKvkwRmK-agMc8YNruhN1W7uF6-v5R2Q2CTuCtvYMYO7Bq2kEfsqESBbi5OOeZPyoYO49gFsgkPifmw2o52vLf7j3ZHcVf0yjogn5ijIQDDDbhTVQO1Puo6-8-_0C0]--></g></svg>