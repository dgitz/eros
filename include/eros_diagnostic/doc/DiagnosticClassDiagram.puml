@startuml
title Diagnostic Class Diagram

namespace eros {
    together {
        enum System::MainSystem
        enum System::SubSystem
        enum System::Component
        enum Level::Type
    }
namespace eros_diagnostic {
    enum DiagnosticType
    enum Message
    struct Diagnostic {
        +string device_name
        +string node_name
        +System::MainSystem system
        +System::SubSystem sub_system
        +System::Component component
        +DiagnosticType type
        +Message message
        +Level::Type level
        +string description
    }
    System::MainSystem *-- Diagnostic
    System::SubSystem *-- Diagnostic
    System::Component *-- Diagnostic
    Level::Type *-- Diagnostic
    DiagnosticType *-- Diagnostic
    Message *-- Diagnostic
    class DiagnosticManager {
        +initialize(Diagnostic diagnostic)
        +vool enable_diagnostics(DiagnoEsticType[] diagnostic_types)
        +Diagnostic get_root_diagnostic()
        +Diagnostic[] get_diagnostics()
        +Diagnostic[] get_latest_diagnostics()
        +Diagnostic update_diagnostic(DiagnosticType diagnostic_type, Level::Type level,Message message,string description)
        +Diagnostic update_diagnostic(Diagnostic diagnostic)
        +Diagnostic update_diagnostic(string device_name, DiagnosticType diagnostic_type,Level::Type level,Message message,string description)
        +string pretty()
        -string pretty(string pre,Diagnostic[] diagnostics)
        -bool initialized
        -Diagnostic root_diagnostic
        -Diagnostic[] diagnostics

    }
    DiagnosticManager --> Diagnostic
    class DiagnosticUtility
    {
        +{static} string DiagnosticTypeString(DiagnosticType v)
        +{static} string DiagnosticMessageString(Message v)
        +{string} pretty(Diagnostic v)



    }
}
}
@enduml